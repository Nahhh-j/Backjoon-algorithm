# 부분 직사각형

'''
문제
오민식은 크기가 N×M 이고, 문자로 채워져있는 직사각형 표를 하나 가지고 있다. 이 표를 복사해 표가 2×2 크기의 직사각형을 이루게 만든다. 그 다음, 복사해서 만든 표의 모든 부분 직사각형을 적는다.
예를 들어, 크기가 1×2인 직사각형 표가 있고, 다음과 같은 문자가 채워져 있는 경우를 보자.

OK
표를 복사해 2×2 크기의 직사각형을 이루게 만들면 다음과 같아진다.

OKOK
OKOK
여기서 찾을 수 있는 모든 부분 직사각형은 30가지가 있고, 다음과 같다. '.'은 구분을 위해 적은 문자이다.

OKOK .... OKOK OKO. .... OKO. .KOK .... .KOK OK.. .... OK.. .KO. .... .KO.
OKOK OKOK .... OKO. OKO. .... .KOK .KOK .... OK.. OK.. .... .KO. .KO. ....

..OK ..OK .... O... .... O... .K.. .... .K.. ..O. .... ..O. ...K .... ...K
..OK .... ..OK O... O... .... .K.. .K.. .... ..O. ..O. .... ...K ...K ....
모든 부분 직사각형에서 각 알파벳이 몇 번 나오는지 구해보자. 위의 경우 K가 40번, O가 40번 등장한다.

입력
첫째 줄에 두 정수 N, M이 주어진다. 둘째 줄부터 N개의 줄에는 표의 각 행에 채워져있는 문자가 주어진다. 문자는 모두 알파벳 대문자이다.

출력
첫째 줄부터 26번째 줄 까지 A가 몇 번 나오는지, B가 몇 번 나오는지, ..., Z가 몇 번 나오는지 까지 출력한다.
'''

N, M = map(int,input().split())
result = [0]* 26
for i in range(N):
    row = (i+1) * (2*N - i) + (i + N + 1) * (N - i)
    S = input()
    for j in range(M):
        col = (j + 1) * (2 * M - j) + (j + M + 1) * (M- j)
        result[ord(S[j]) - ord('A')] += row * col
for i in result:
    print(i)